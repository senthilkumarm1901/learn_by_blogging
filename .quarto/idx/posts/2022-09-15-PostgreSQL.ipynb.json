{"title":"Commonly used PostgreSQL Commands","markdown":{"yaml":{"author":"Senthil Kumar","badges":true,"branch":"master","categories":["Coding","SQL"],"date":"2022-09-15","description":"Let us dig into the PostgreSQL Couplets to update RDS & common Python (Psycopg2) scripts to access PostgreSQL RDS","output-file":"2022-09-15-PostgreSQL.ipynb","title":"Commonly used PostgreSQL Commands","toc":true,"image":"images/sql/psycopg2.png"},"headingText":"SQL Couplets to Update RDS Tables","containsRefs":false,"markdown":"\n\n\n### Create a table in RDS\n```sql\nCREATE TABLE IF NOT EXISTS table_name(\n    primary_key VARCHAR PRIMARY KEY NOT NULL,\n    text_column_name  TEXT,\n    boolean_column_name BOOL,\n    float_column_name FLOAT8,\n    date_column_name DATE,\n```\n\n### Add a new column to a table\n```sql\nALTER TABLE table_name \n    ADD column_name COLUMN_DATA_TYPE;\n```\n\n### Remove a new column to a table\n```sql\nALTER TABLE table_name \n    DROP column_name COLUMN_DATA_TYPE;\n```\n\n### Update a column in a table using values from a column in another table\n```sql\nUPDATE table_name_1\nSET column_name = t2.column_name\nFROM table_name_2 t2\nWHERE table_name_1.column_name = t2.column_name;\n```\n\n### Update a particular cell\n```sql\nUPDATE table_name\nSET column_name_1 = 'some_value'\nWHERE column_name_2 = 'someother value'\n```\n\n### Modify the column data type in SQL\n```sql\nALTER TABLE table_name\n  ALTER COLUMN column_name TYPE column_definition;\n```\n\n### Rename the column data type\n```sql\nALTER TABLE table_name\n  RENAME COLUMN old_name TO new_name;\n```\n\n### Rename table name\n```sql\nALTER TABLE table_name\n  RENAME TO new_table_name;\n```\n\n### Change `NaN` to Null values\n\n```sql\nUPDATE public.table_name \nSET agent_name = NULL\nWHERE agent_name = 'NaN';\n```\n### Display column names\n\n```sql\nselect *\nfrom table_name\nwhere false\n```\n\n### Delete records matching specific regex pattern\n```sql\nDELETE FROM table_name where some_column ~ 'pattern'\n```\n\n#### Some common PostgreSql Regex SQL Syntaxes\n- `~` CASE SENSITIVE pattern matching\n- `~*` CASE INSENSITIVE pattern matching\n- `!~` CASE SENSITIVE \"unmatched\" pattern (or NOT regex)\n- `!~*` CASE INSENSITIVE \"unmatched\" pattern (or NOT regex)\n\n#### Matching Some Common Regex patterns\n- For matching all values in `some_column` which starts with capital S\n```sql\nSELECT * FROM table_name where some_column ~ '^S'\n```\n- For matching all values in `some_column` which end with capital or small case `S`\n```sql\nSELECT * FROM table_name where some_column ~* 'S$'\n```\n- For matching all values in `some_column` where there or 2 or more numbers in the Text\n```sql\nSELECT * FROM table_name where some_column ~ '[0-9][0-9]'\n```\n\n- To look into more about PostgreSQL functions like `REGEXP_REPLACE`, `REGEXP_MATCHES` or Regex in `SUBSTRING` function, refer [this url](https://hevodata.com/learn/postgresql-regex/)\n\n## python + PostgreSQL using Psycopg2\n\n### Update a particular cell recursively from values in a list of lists\n\n```python\nlol = [[value1A,value1B], [value2A, value2B]]\nfor i,every_list in enumerate(lol):\n    print(f\"Update value to a particular cell in the table ...\")\n    sql_query = f\"UPDATE public.table_name SET date_column='{every_list[0]}' WHERE file_key='{every_list[1]}'\"\n    print(\"*********\")\n    cur.execute(sql_query)\nconn.commit()\n```\n\n### Insert rows of values from a list of lists\n\n```python\nlol = [[value1A,value1B], [value2A, value2B]]\nsql_query = f\"INSERT INTO table_name (column_name1, column_name2) VALUES (%s, %s)\"\nfor every_list in lol:\n    print(f\"Updating the last row in a table ...\")\n    cur.execute(sql_query,every_list)\nconn.commit()\n```\n\n### Copy a table to CSV and export the csv to AWS S3 bucket using Pandas\n\n```python\nselect_query = f\"SELECT * FROM public.{table_name} LIMIT 100\"\nsql = f\"\"\"\ncopy (\n    {select_query}\n) to stdout\n\"\"\"\noutputquery = \"COPY ({0}) TO STDOUT WITH CSV HEADER\".format(select_query)\nprint(sql)\nfile = io.StringIO()\ncur.copy_expert(outputquery,file)\nconn.commit()\nfile.seek(0)\ndf = pd.read_csv(file, encoding='utf-8')\n# in case your csv has foreign lang or non-ascii characters\ncsv_buffer = io.BytesIO()\ndf.to_csv(csv_buffer, index=False, encoding='utf_8_sig')\ncsv_buffer.seek(0)\ns3_obj = boto3.client('s3')\nresponse = s3_obj.put_object(\n    Bucket=bucket_name,\n    Key=f'{prefix}/{table_name}.csv',\n    Body=csv_buffer\n)\n```\n\n\n\n","srcMarkdownNoYaml":"\n\n## SQL Couplets to Update RDS Tables \n\n### Create a table in RDS\n```sql\nCREATE TABLE IF NOT EXISTS table_name(\n    primary_key VARCHAR PRIMARY KEY NOT NULL,\n    text_column_name  TEXT,\n    boolean_column_name BOOL,\n    float_column_name FLOAT8,\n    date_column_name DATE,\n```\n\n### Add a new column to a table\n```sql\nALTER TABLE table_name \n    ADD column_name COLUMN_DATA_TYPE;\n```\n\n### Remove a new column to a table\n```sql\nALTER TABLE table_name \n    DROP column_name COLUMN_DATA_TYPE;\n```\n\n### Update a column in a table using values from a column in another table\n```sql\nUPDATE table_name_1\nSET column_name = t2.column_name\nFROM table_name_2 t2\nWHERE table_name_1.column_name = t2.column_name;\n```\n\n### Update a particular cell\n```sql\nUPDATE table_name\nSET column_name_1 = 'some_value'\nWHERE column_name_2 = 'someother value'\n```\n\n### Modify the column data type in SQL\n```sql\nALTER TABLE table_name\n  ALTER COLUMN column_name TYPE column_definition;\n```\n\n### Rename the column data type\n```sql\nALTER TABLE table_name\n  RENAME COLUMN old_name TO new_name;\n```\n\n### Rename table name\n```sql\nALTER TABLE table_name\n  RENAME TO new_table_name;\n```\n\n### Change `NaN` to Null values\n\n```sql\nUPDATE public.table_name \nSET agent_name = NULL\nWHERE agent_name = 'NaN';\n```\n### Display column names\n\n```sql\nselect *\nfrom table_name\nwhere false\n```\n\n### Delete records matching specific regex pattern\n```sql\nDELETE FROM table_name where some_column ~ 'pattern'\n```\n\n#### Some common PostgreSql Regex SQL Syntaxes\n- `~` CASE SENSITIVE pattern matching\n- `~*` CASE INSENSITIVE pattern matching\n- `!~` CASE SENSITIVE \"unmatched\" pattern (or NOT regex)\n- `!~*` CASE INSENSITIVE \"unmatched\" pattern (or NOT regex)\n\n#### Matching Some Common Regex patterns\n- For matching all values in `some_column` which starts with capital S\n```sql\nSELECT * FROM table_name where some_column ~ '^S'\n```\n- For matching all values in `some_column` which end with capital or small case `S`\n```sql\nSELECT * FROM table_name where some_column ~* 'S$'\n```\n- For matching all values in `some_column` where there or 2 or more numbers in the Text\n```sql\nSELECT * FROM table_name where some_column ~ '[0-9][0-9]'\n```\n\n- To look into more about PostgreSQL functions like `REGEXP_REPLACE`, `REGEXP_MATCHES` or Regex in `SUBSTRING` function, refer [this url](https://hevodata.com/learn/postgresql-regex/)\n\n## python + PostgreSQL using Psycopg2\n\n### Update a particular cell recursively from values in a list of lists\n\n```python\nlol = [[value1A,value1B], [value2A, value2B]]\nfor i,every_list in enumerate(lol):\n    print(f\"Update value to a particular cell in the table ...\")\n    sql_query = f\"UPDATE public.table_name SET date_column='{every_list[0]}' WHERE file_key='{every_list[1]}'\"\n    print(\"*********\")\n    cur.execute(sql_query)\nconn.commit()\n```\n\n### Insert rows of values from a list of lists\n\n```python\nlol = [[value1A,value1B], [value2A, value2B]]\nsql_query = f\"INSERT INTO table_name (column_name1, column_name2) VALUES (%s, %s)\"\nfor every_list in lol:\n    print(f\"Updating the last row in a table ...\")\n    cur.execute(sql_query,every_list)\nconn.commit()\n```\n\n### Copy a table to CSV and export the csv to AWS S3 bucket using Pandas\n\n```python\nselect_query = f\"SELECT * FROM public.{table_name} LIMIT 100\"\nsql = f\"\"\"\ncopy (\n    {select_query}\n) to stdout\n\"\"\"\noutputquery = \"COPY ({0}) TO STDOUT WITH CSV HEADER\".format(select_query)\nprint(sql)\nfile = io.StringIO()\ncur.copy_expert(outputquery,file)\nconn.commit()\nfile.seek(0)\ndf = pd.read_csv(file, encoding='utf-8')\n# in case your csv has foreign lang or non-ascii characters\ncsv_buffer = io.BytesIO()\ndf.to_csv(csv_buffer, index=False, encoding='utf_8_sig')\ncsv_buffer.seek(0)\ns3_obj = boto3.client('s3')\nresponse = s3_obj.put_object(\n    Bucket=bucket_name,\n    Key=f'{prefix}/{table_name}.csv',\n    Body=csv_buffer\n)\n```\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"2022-09-15-PostgreSQL.ipynb","toc":true},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.336","theme":"cosmo","title-block-banner":true,"comments":{"utterances":{"repo":"senthilkumarm1901/QuartoBlogComments"}},"author":"Senthil Kumar","badges":true,"branch":"master","categories":["Coding","SQL"],"date":"2022-09-15","description":"Let us dig into the PostgreSQL Couplets to update RDS & common Python (Psycopg2) scripts to access PostgreSQL RDS","title":"Commonly used PostgreSQL Commands","image":"images/sql/psycopg2.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}