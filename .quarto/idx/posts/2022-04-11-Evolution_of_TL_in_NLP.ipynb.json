{"title":"The Evolution of Transfer Learning until the Advent of the First Tranformers in NLP","markdown":{"yaml":{"aliases":["/Transfer-Learning-in-NLP/2022/04/11/Evolution_of_TL_in_NLP"],"author":"Senthil Kumar","badges":true,"branch":"master","categories":["NLP","Transformers"],"date":"2022-04-11","description":"An overview covering important NLP milestones from pre-transfer learning era until the era of BERT (before GPT)","hide":false,"image":"images/transfer_learning_evolution/Transfer_learning_evolution_pic_1.png","output-file":"2022-04-11-evolution_of_tl_in_nlp.html","title":"The Evolution of Transfer Learning until the Advent of the First Tranformers in NLP","toc":true},"headingText":"1. Quick Introduction","containsRefs":false,"markdown":"\n\n\n\n<br>\n<hr>\n<br>\n\nWant to read this blog in a easier to digest slides format? Refer [Link](https://senthilkumarm1901.github.io/UnderstandingTransferLearning4NLP/docs/Evolution_of_TL_in_NLP.html#/)\n\n\n### What is powering the emergence of better models in NLP?\n- Better representation of the text data (with no supervision) by grasping the `context` better\n     - From `Word2Vec` to `BERT` and beyond, this is the underlying logic!\n\n<hr>\n\n### How are better text representations produced?\n- Better contextual representation of words using Transfer Learning\n\n<hr>\n\n### What is Transfer Learning?\n![](https://humboldt-wi.github.io/blog/img/seminar/group4_ULMFiT/Figure_1.png)\nSource: ULMFiT Paper | [link](https://humboldt-wi.github.io/blog/research/information_systems_1819/group4_ulmfit/)\n\n<hr>\n\n### What forms the crux of Transfer Learning models in NLP?\n- Language Models! <br> \n    - (1) Build a **Language Model** that understands the underlying features of the text \n    - (2) Fine-tune the Language Model with additional layers for downstream tasks\n\n<hr>\n\n### Why Language Model? \n> *Language modeling can be seen as the ideal source task as it captures many facets of language relevant for downstream tasks, such as long-term dependencies, hierarchical relations and sentiment* <br>\n> \n>Ruder et al in the ULMFiT paper\n\n<hr>\n\n### Ok, What is a Language Model?\n- A language model (LM) is a model that generates a probability distribution over sequences of words\n- In simpler words, LM is a model to predict the next word in a sequence of words\n- It is `unsupervised` or `self-supervised` (since we already know what is the next word in the corpus)\n\n<hr>\n\n### What are those Language Models?\n- Examples of Language Models: Word2Vec, Glove, ELMo, ULMFiT, BERT, and many more \n\n![](https://ruder.io/content/images/2021/02/pretraining_finetuning.png)\nSource: A article by Sebastian Ruder: `State of Transfer Learning in NLP` | [Link](https://ruder.io/state-of-transfer-learning-in-nlp/)\n\n<hr>\n\n### What are the two types of Transfer Learning built using the LMs?\n\n- Type 1: `Feature Extraction`\n    - Example: `Universal Sentence Encoder` produces just an embedding/numerical representation and that gets used by a downstream application\n    ![](https://www.gstatic.com/aihub/tfhub/universal-sentence-encoder/example-classification.png)\n    \nSource of image: TF Hub Article on Universal Sentence Encoder | [Link](https://www.tensorflow.org/hub/tutorials/text_cookbook)\n    \n<br>\n\n- Type 2: `Fine Tuning`\n    - E.g.: `BERT` Fine-tuned for Text Classification\n    ![](https://www.researchgate.net/publication/351386823/figure/fig4/AS:1024183752478725@1621195843655/BERT-Fine-tuning-pipeline-for-a-sample-sentiment-identification-task.jpg)\n\nSource of image: An article in Research Gate | [Link](https://www.researchgate.net/figure/BERT-Fine-tuning-pipeline-for-a-sample-sentiment-identification-task_fig4_351386823)\n\n<br>\n<hr>\n<br>\n\n## 2. Types of Language Models\n\n### 2A. Count-based Language Models\n\n![](images/transfer_learning_evolution/Count_based_LMs.png)\n\n<hr>\n\n### 2B. Context-prediction based `Pre-trained` Language Models\n\n![](images/transfer_learning_evolution/context_prediction_based_language_models.png)\n\n\nSources: <br>\n- Advanced NLP and Deep Learning course on Udemy (by LazyProgrammer)\n- Idea: http://www.marekrei.com/blog/dont-count-predict/\n\n<hr>\n\n### 2C. LSTM-based `Pre-trained` Language Models \n\n#### Evolution of RNN Architecture till LSTM\n\n**Why RNNs came into existence?** <br>\n- Models such as the Multi-layer Perceptron Network, vector machines and logistic regression did not perform well on sequence modelling tasks (e.g.: text_sequence2sentiment_classification) \n- Why? Lack of memory element ; No information retention\n- RNNs attempted to redress this shortcoming by introducing loops within the network, thus allowing the retention of information.\n\n![An un-rolled RNN Cell](images/transfer_learning_evolution/an_unrolled_RNN.png)\n\n**Advantage of a vanilla RNN**: <br>\n- Better than traditional ML algos in retaining information\n\n**Limitations of a vanilla RNN**: <br>\n- RNNs fail to model long term dependencies.\n- the information was often **\"forgotten\"** after the unit activations were multiplied several times by small numbers\n- Vanishing gradient and exploding gradient problems\n\n**Long Short Term Memory (LSTM)**: <br>\n- A special type of RNN architecture\n- Designed to keep information retained for extended number of timesteps\n\n**Advantage of a LSTM**: <br>\n- Better equipped for long range dependencies\n- Resists better than RNNs for vanishing gradient problem\n\n**Limitations of LSTM**: <br>\n- Added gates lead to more computation requirement and LSTMs tend to be slower\n- Difficult to train\n- Transfer Learning never really worked\n- Very long gradient paths. LSTM on 100-word doc has gradients 100-layer network\n            \n<br>            \n\n#### Seq2Seq Models - A higher form of LMs\n\n![](images/transfer_learning_evolution/Seq2Seq_Model_A_Higher_form_of_LM.png)\n\n<br>\n\n#### The `ImageNet` moment in NLP; advent of LSTM models `ULMFiT` and `ELMo`\n\n- ELMo comes up with better `word representations/embeddings` using Language Models that learn the `context` of the word in focus\n![](https://ahmedhanibrahim.files.wordpress.com/2019/07/52861-1pb5hxsxogjrnda_si4nj9q.png?w=775)\n\n\n<hr>\n\n### 2D. Transformer-based `Pre-trained` Language Models\n#### LSTM Seq2Seq Model with Attention\n\n![](images/transfer_learning_evolution/seq2seq_model_with_attention.png)\n\n<br>\n\n#### Transformer - A Seq2Seq Model with Attention \n\n**Transformer**: \n- It is a sequence model forgoes the recurrent structure of RNN to adopt attention-based approach\n- In other words, Transformer is an attention Model without Recurrent LSTMs\n\n**Transformer** vs **LSTM**\n- Recurrent Structure: Processes all input elements SEQUENTIALLY\n- Attention-based Approach: Process all input elements SIMULTANEOUSLY\n\n<hr>\n\n**The BERT Mountain by Chris McCormick**: <br>\n\n![](http://www.mccormickml.com/assets/BERT/BERT_Mountain.png)\n\n<hr>\n\n**Transformer for a Seq2Seq Task like Machine Translation**: <br>\n\n![](https://jalammar.github.io/images/t/The_transformer_encoder_decoder_stack.png)\n\n<br>\n\n#### The Advent of BERT and similar Transformers\n\n##### What has been the trend of recent Pre-trained Tranformer-based LMs?\n\n- Exponentially increasing model complexity (number of parameters)\n\n![](https://4.bp.blogspot.com/-v0xrp7eJRfM/Xr77DD85ObI/AAAAAAAADDY/KjIlWlFZExQA84VRDrMEMrB534euKAzlgCLcBGAsYHQ/s1600/NLP%2Bmodels.png)\n\n- Exponentially increasing data\n\n![](images/transfer_learning_evolution/different_transformer_models_and_their_corpora.png)\n\n**Question to ponder**: \n- Are models bettering in performance because of more data or more model complexity? How much is the contribution from each? \n- Are models built with efficiency in mind? (not a lot can replicate these models given the large number of GPUs necessary)\n\n<br>\n\n##### What direction should future Pre-trained Transformer-based LMs go?\n\n- Computational Compexity is quadratic compared to input length. We curb input length to 512 tokens for most transformer models.\n> Better model architectures are needed to capture long-range information\n- As models become bigger and complex, their explainability becomes difficult\n- There are models/methods/explaining the workings of attention mechanism but much more is needed in this space\n> Need more efficient models with explainability in mind as well\n\n<br>\n<hr>\n<br>\n\n## 3. Conclusion\n\n### In summary, how has transfer learning evolved in NLP?\n\n- Step -2: NLP started with rule-based and statistical methodologies\n- Step -1: ML algorithms such as Naive Bayes, SVM, LR and Trees were fed with bag-of-words word representations \n- Step 0: Initial Success of better representations using pre-trained LMs like Word2Vec which were built using shallow Neural Network\n- Step 1: (Re)Emergence of RNN Architectures in NLP\n- Step 2: Evolution of Sequence-to-Sequence Models built with RNN architectures from Language Models | [source](https://indicodata.ai/blog/sequence-modeling-neuralnets-part1/)\n- Step 3: `ImageNet` moment in NLP called upon by the first pre-Transformer era Transfer Learning models - ULMFiT and ELMo\n- Step 4: Cometh the hour, cometh the Transformers ! \n\n<br>\n<hr>\n<br>\n\n## 4. Want to try Transfer Learning hands-on? \n\n**Example notebooks for `Text Classification` Application**\n\nJay Alamar's Post: DistilBERT for `Feature Extraction` + Logitic Regression for classification | [Link](https://jalammar.github.io/a-visual-guide-to-using-bert-for-the-first-time/)\n\n![DistilBERT Sentiment Classifier](https://jalammar.github.io/images/distilBERT/distilbert-bert-sentiment-classifier.png)\n\nJay Alamar's Post: BERT Fine-tuned for Classification | [Picture_Link](https://raw.githubusercontent.com/jalammar/jalammar.github.io/master/images/bert-classifier.png) | [HuggingFace Example Fine-tuning Notebook](https://github.com/huggingface/notebooks/blob/main/examples/text_classification.ipynb![image.png](attachment:image.png))\n\nReferences:\n- A suevey paper on `Evolution of Transfer Learning in Natural Language Processing` | [Link](https://arxiv.org/pdf/1910.07370.pdf) <br>\n- A survey paper on `Pre-trained Models for NLP` | [Link](https://arxiv.org/pdf/2003.08271.pdf) <br>\n- `The State of Transfer Learning in NLP` | Article by Sebastian Ruder | [Link](https://ruder.io/state-of-transfer-learning-in-nlp/) <br>\n- `NLP's ImageNet Moment has arrived` | Article by Sebastian Ruder | [Link](https://ruder.io/nlp-imagenet/) <br>\n- `Recent Advances in LMs` | Article by Sebastian | [Link](https://ruder.io/recent-advances-lm-fine-tuning/) <br>\n- `Sequence Modeling with Neural Networks` <br>\n     - [Part 1](https://indicodata.ai/blog/sequence-modeling-neuralnets-part1/): `Evolution of Seq2Seq Models from Language Models` <br>\n     - [Part 2](https://indicodata.ai/blog/sequence-modeling-neural-networks-part2-attention-models/): `Seq2Seq with Attention`\n- `LSTM is dead. Long Live Transformers`  | [YouTube Video by Leo Dirac](https://www.youtube.com/watch?v=S27pHKBEp30&t=1073s) |  [Presentation on the same title](https://rbouadjenek.github.io/papers/transformers_Reda@Deakin.pdf) <br>\n- `The Future of NLP` video and slides by Thomas Wolf, HugginngFace Co-Founder | [YouTube Video](https://www.youtube.com/watch?v=G5lmya6eKtc) <br>\n\n","srcMarkdownNoYaml":"\n\n\n\n<br>\n<hr>\n<br>\n\nWant to read this blog in a easier to digest slides format? Refer [Link](https://senthilkumarm1901.github.io/UnderstandingTransferLearning4NLP/docs/Evolution_of_TL_in_NLP.html#/)\n\n## 1. Quick Introduction\n\n### What is powering the emergence of better models in NLP?\n- Better representation of the text data (with no supervision) by grasping the `context` better\n     - From `Word2Vec` to `BERT` and beyond, this is the underlying logic!\n\n<hr>\n\n### How are better text representations produced?\n- Better contextual representation of words using Transfer Learning\n\n<hr>\n\n### What is Transfer Learning?\n![](https://humboldt-wi.github.io/blog/img/seminar/group4_ULMFiT/Figure_1.png)\nSource: ULMFiT Paper | [link](https://humboldt-wi.github.io/blog/research/information_systems_1819/group4_ulmfit/)\n\n<hr>\n\n### What forms the crux of Transfer Learning models in NLP?\n- Language Models! <br> \n    - (1) Build a **Language Model** that understands the underlying features of the text \n    - (2) Fine-tune the Language Model with additional layers for downstream tasks\n\n<hr>\n\n### Why Language Model? \n> *Language modeling can be seen as the ideal source task as it captures many facets of language relevant for downstream tasks, such as long-term dependencies, hierarchical relations and sentiment* <br>\n> \n>Ruder et al in the ULMFiT paper\n\n<hr>\n\n### Ok, What is a Language Model?\n- A language model (LM) is a model that generates a probability distribution over sequences of words\n- In simpler words, LM is a model to predict the next word in a sequence of words\n- It is `unsupervised` or `self-supervised` (since we already know what is the next word in the corpus)\n\n<hr>\n\n### What are those Language Models?\n- Examples of Language Models: Word2Vec, Glove, ELMo, ULMFiT, BERT, and many more \n\n![](https://ruder.io/content/images/2021/02/pretraining_finetuning.png)\nSource: A article by Sebastian Ruder: `State of Transfer Learning in NLP` | [Link](https://ruder.io/state-of-transfer-learning-in-nlp/)\n\n<hr>\n\n### What are the two types of Transfer Learning built using the LMs?\n\n- Type 1: `Feature Extraction`\n    - Example: `Universal Sentence Encoder` produces just an embedding/numerical representation and that gets used by a downstream application\n    ![](https://www.gstatic.com/aihub/tfhub/universal-sentence-encoder/example-classification.png)\n    \nSource of image: TF Hub Article on Universal Sentence Encoder | [Link](https://www.tensorflow.org/hub/tutorials/text_cookbook)\n    \n<br>\n\n- Type 2: `Fine Tuning`\n    - E.g.: `BERT` Fine-tuned for Text Classification\n    ![](https://www.researchgate.net/publication/351386823/figure/fig4/AS:1024183752478725@1621195843655/BERT-Fine-tuning-pipeline-for-a-sample-sentiment-identification-task.jpg)\n\nSource of image: An article in Research Gate | [Link](https://www.researchgate.net/figure/BERT-Fine-tuning-pipeline-for-a-sample-sentiment-identification-task_fig4_351386823)\n\n<br>\n<hr>\n<br>\n\n## 2. Types of Language Models\n\n### 2A. Count-based Language Models\n\n![](images/transfer_learning_evolution/Count_based_LMs.png)\n\n<hr>\n\n### 2B. Context-prediction based `Pre-trained` Language Models\n\n![](images/transfer_learning_evolution/context_prediction_based_language_models.png)\n\n\nSources: <br>\n- Advanced NLP and Deep Learning course on Udemy (by LazyProgrammer)\n- Idea: http://www.marekrei.com/blog/dont-count-predict/\n\n<hr>\n\n### 2C. LSTM-based `Pre-trained` Language Models \n\n#### Evolution of RNN Architecture till LSTM\n\n**Why RNNs came into existence?** <br>\n- Models such as the Multi-layer Perceptron Network, vector machines and logistic regression did not perform well on sequence modelling tasks (e.g.: text_sequence2sentiment_classification) \n- Why? Lack of memory element ; No information retention\n- RNNs attempted to redress this shortcoming by introducing loops within the network, thus allowing the retention of information.\n\n![An un-rolled RNN Cell](images/transfer_learning_evolution/an_unrolled_RNN.png)\n\n**Advantage of a vanilla RNN**: <br>\n- Better than traditional ML algos in retaining information\n\n**Limitations of a vanilla RNN**: <br>\n- RNNs fail to model long term dependencies.\n- the information was often **\"forgotten\"** after the unit activations were multiplied several times by small numbers\n- Vanishing gradient and exploding gradient problems\n\n**Long Short Term Memory (LSTM)**: <br>\n- A special type of RNN architecture\n- Designed to keep information retained for extended number of timesteps\n\n**Advantage of a LSTM**: <br>\n- Better equipped for long range dependencies\n- Resists better than RNNs for vanishing gradient problem\n\n**Limitations of LSTM**: <br>\n- Added gates lead to more computation requirement and LSTMs tend to be slower\n- Difficult to train\n- Transfer Learning never really worked\n- Very long gradient paths. LSTM on 100-word doc has gradients 100-layer network\n            \n<br>            \n\n#### Seq2Seq Models - A higher form of LMs\n\n![](images/transfer_learning_evolution/Seq2Seq_Model_A_Higher_form_of_LM.png)\n\n<br>\n\n#### The `ImageNet` moment in NLP; advent of LSTM models `ULMFiT` and `ELMo`\n\n- ELMo comes up with better `word representations/embeddings` using Language Models that learn the `context` of the word in focus\n![](https://ahmedhanibrahim.files.wordpress.com/2019/07/52861-1pb5hxsxogjrnda_si4nj9q.png?w=775)\n\n\n<hr>\n\n### 2D. Transformer-based `Pre-trained` Language Models\n#### LSTM Seq2Seq Model with Attention\n\n![](images/transfer_learning_evolution/seq2seq_model_with_attention.png)\n\n<br>\n\n#### Transformer - A Seq2Seq Model with Attention \n\n**Transformer**: \n- It is a sequence model forgoes the recurrent structure of RNN to adopt attention-based approach\n- In other words, Transformer is an attention Model without Recurrent LSTMs\n\n**Transformer** vs **LSTM**\n- Recurrent Structure: Processes all input elements SEQUENTIALLY\n- Attention-based Approach: Process all input elements SIMULTANEOUSLY\n\n<hr>\n\n**The BERT Mountain by Chris McCormick**: <br>\n\n![](http://www.mccormickml.com/assets/BERT/BERT_Mountain.png)\n\n<hr>\n\n**Transformer for a Seq2Seq Task like Machine Translation**: <br>\n\n![](https://jalammar.github.io/images/t/The_transformer_encoder_decoder_stack.png)\n\n<br>\n\n#### The Advent of BERT and similar Transformers\n\n##### What has been the trend of recent Pre-trained Tranformer-based LMs?\n\n- Exponentially increasing model complexity (number of parameters)\n\n![](https://4.bp.blogspot.com/-v0xrp7eJRfM/Xr77DD85ObI/AAAAAAAADDY/KjIlWlFZExQA84VRDrMEMrB534euKAzlgCLcBGAsYHQ/s1600/NLP%2Bmodels.png)\n\n- Exponentially increasing data\n\n![](images/transfer_learning_evolution/different_transformer_models_and_their_corpora.png)\n\n**Question to ponder**: \n- Are models bettering in performance because of more data or more model complexity? How much is the contribution from each? \n- Are models built with efficiency in mind? (not a lot can replicate these models given the large number of GPUs necessary)\n\n<br>\n\n##### What direction should future Pre-trained Transformer-based LMs go?\n\n- Computational Compexity is quadratic compared to input length. We curb input length to 512 tokens for most transformer models.\n> Better model architectures are needed to capture long-range information\n- As models become bigger and complex, their explainability becomes difficult\n- There are models/methods/explaining the workings of attention mechanism but much more is needed in this space\n> Need more efficient models with explainability in mind as well\n\n<br>\n<hr>\n<br>\n\n## 3. Conclusion\n\n### In summary, how has transfer learning evolved in NLP?\n\n- Step -2: NLP started with rule-based and statistical methodologies\n- Step -1: ML algorithms such as Naive Bayes, SVM, LR and Trees were fed with bag-of-words word representations \n- Step 0: Initial Success of better representations using pre-trained LMs like Word2Vec which were built using shallow Neural Network\n- Step 1: (Re)Emergence of RNN Architectures in NLP\n- Step 2: Evolution of Sequence-to-Sequence Models built with RNN architectures from Language Models | [source](https://indicodata.ai/blog/sequence-modeling-neuralnets-part1/)\n- Step 3: `ImageNet` moment in NLP called upon by the first pre-Transformer era Transfer Learning models - ULMFiT and ELMo\n- Step 4: Cometh the hour, cometh the Transformers ! \n\n<br>\n<hr>\n<br>\n\n## 4. Want to try Transfer Learning hands-on? \n\n**Example notebooks for `Text Classification` Application**\n\nJay Alamar's Post: DistilBERT for `Feature Extraction` + Logitic Regression for classification | [Link](https://jalammar.github.io/a-visual-guide-to-using-bert-for-the-first-time/)\n\n![DistilBERT Sentiment Classifier](https://jalammar.github.io/images/distilBERT/distilbert-bert-sentiment-classifier.png)\n\nJay Alamar's Post: BERT Fine-tuned for Classification | [Picture_Link](https://raw.githubusercontent.com/jalammar/jalammar.github.io/master/images/bert-classifier.png) | [HuggingFace Example Fine-tuning Notebook](https://github.com/huggingface/notebooks/blob/main/examples/text_classification.ipynb![image.png](attachment:image.png))\n\nReferences:\n- A suevey paper on `Evolution of Transfer Learning in Natural Language Processing` | [Link](https://arxiv.org/pdf/1910.07370.pdf) <br>\n- A survey paper on `Pre-trained Models for NLP` | [Link](https://arxiv.org/pdf/2003.08271.pdf) <br>\n- `The State of Transfer Learning in NLP` | Article by Sebastian Ruder | [Link](https://ruder.io/state-of-transfer-learning-in-nlp/) <br>\n- `NLP's ImageNet Moment has arrived` | Article by Sebastian Ruder | [Link](https://ruder.io/nlp-imagenet/) <br>\n- `Recent Advances in LMs` | Article by Sebastian | [Link](https://ruder.io/recent-advances-lm-fine-tuning/) <br>\n- `Sequence Modeling with Neural Networks` <br>\n     - [Part 1](https://indicodata.ai/blog/sequence-modeling-neuralnets-part1/): `Evolution of Seq2Seq Models from Language Models` <br>\n     - [Part 2](https://indicodata.ai/blog/sequence-modeling-neural-networks-part2-attention-models/): `Seq2Seq with Attention`\n- `LSTM is dead. Long Live Transformers`  | [YouTube Video by Leo Dirac](https://www.youtube.com/watch?v=S27pHKBEp30&t=1073s) |  [Presentation on the same title](https://rbouadjenek.github.io/papers/transformers_Reda@Deakin.pdf) <br>\n- `The Future of NLP` video and slides by Thomas Wolf, HugginngFace Co-Founder | [YouTube Video](https://www.youtube.com/watch?v=G5lmya6eKtc) <br>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"2022-04-11-evolution_of_tl_in_nlp.html","toc":true},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.336","theme":"cosmo","title-block-banner":true,"comments":{"utterances":{"repo":"senthilkumarm1901/QuartoBlogComments"}},"aliases":["/Transfer-Learning-in-NLP/2022/04/11/Evolution_of_TL_in_NLP"],"author":"Senthil Kumar","badges":true,"branch":"master","categories":["NLP","Transformers"],"date":"2022-04-11","description":"An overview covering important NLP milestones from pre-transfer learning era until the era of BERT (before GPT)","hide":false,"image":"images/transfer_learning_evolution/Transfer_learning_evolution_pic_1.png","title":"The Evolution of Transfer Learning until the Advent of the First Tranformers in NLP"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}